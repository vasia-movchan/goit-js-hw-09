{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,SAASE,SAASC,MACrDC,UAAWL,SAASC,cAAc,SAASE,SAASG,KACpDC,OAAQP,SAASC,cAAc,SAASE,SAASI,OACjDC,UAAWR,SAASC,cAAc,WAkCpC,SAASQ,EAAcC,EAAUN,GAC/B,MAAMO,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,UAAEL,QAAUN,IAEpBY,EAAO,UAAEN,QAAUN,MAEpBA,MAxCPN,EAAKC,KAAKmB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAIR,WACE,MAAMb,EAASc,OAAOvB,EAAKS,OAAOe,OAC5BjB,EAAYgB,OAAOvB,EAAKO,UAAUiB,OAExC,IAAIC,EADeF,OAAOvB,EAAKI,WAAWoB,OAG1C,IAAK,IAAIE,EAAW,EAAGA,GAAYjB,EAAQiB,GAAY,EACrDf,EAAce,EAAUD,GACrBE,MAAK,EAACf,SAAEA,EAAQN,MAAEA,MACjBsB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqBlB,QAAeN,MAAW,CACrEyB,QAAS,SAIZC,OAAM,EAACpB,SAAEA,EAAQN,MAAEA,MAClBsB,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAoBrB,QAAeN,MAAW,CACpEyB,QAAS,SAIfN,GAASlB,EAvBX2B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  firstDelay: document.querySelector(\".form\").elements.delay,\n  stepDelay: document.querySelector(\".form\").elements.step,\n  amount: document.querySelector(\".form\").elements.amount,\n  submitBtn: document.querySelector(\"button\"),\n};\n\nrefs.form.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  createPromises();\n}\n\nfunction createPromises() {\n  const amount = Number(refs.amount.value);\n  const stepDelay = Number(refs.stepDelay.value);\n  const firstDelay = Number(refs.firstDelay.value);\n  let delay = firstDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n        });\n        // console.log(`âœ… Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n        });\n      });\n\n    delay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","elements","delay","stepDelay","step","amount","submitBtn","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","Number","value","delay1","position1","then","$parcel$interopDefault","Notify","success","timeout","catch","failure","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.801136b9.js.map"}